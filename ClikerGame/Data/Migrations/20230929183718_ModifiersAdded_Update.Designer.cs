// <auto-generated />
using ClikerGame.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClikerGame.Data.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20230929183718_ModifiersAdded_Update")]
    partial class ModifiersAdded_Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ClikerGame.Data.UserModel+Modifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Modificator")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Modifier", null, t =>
                        {
                            t.HasCheckConstraint("Name", "Name <> ''");
                        });
                });

            modelBuilder.Entity("ClikerGame.Data.UserModel+User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users", t =>
                        {
                            t.HasCheckConstraint("Nickname", "Nickname <> ''");
                        });
                });

            modelBuilder.Entity("ClikerGame.Data.UserModel+UserModifier", b =>
                {
                    b.Property<int>("UsersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModifiersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityOfModifiers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("UsersId", "ModifiersId");

                    b.HasIndex("ModifiersId");

                    b.ToTable("UserModifier", (string)null);
                });

            modelBuilder.Entity("ClikerGame.Data.UserModel+UserModifier", b =>
                {
                    b.HasOne("ClikerGame.Data.UserModel+Modifier", "Modifier")
                        .WithMany("UserModifiers")
                        .HasForeignKey("ModifiersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClikerGame.Data.UserModel+User", "User")
                        .WithMany("UserModifiers")
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modifier");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClikerGame.Data.UserModel+Modifier", b =>
                {
                    b.Navigation("UserModifiers");
                });

            modelBuilder.Entity("ClikerGame.Data.UserModel+User", b =>
                {
                    b.Navigation("UserModifiers");
                });
#pragma warning restore 612, 618
        }
    }
}
